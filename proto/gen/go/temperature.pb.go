// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v3.12.4
// source: temperature.proto

package temperature

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Unit int32

const (
	Unit_CELSIUS    Unit = 0
	Unit_FAHRENHEIT Unit = 1
	Unit_KELVIN     Unit = 2
)

// Enum value maps for Unit.
var (
	Unit_name = map[int32]string{
		0: "CELSIUS",
		1: "FAHRENHEIT",
		2: "KELVIN",
	}
	Unit_value = map[string]int32{
		"CELSIUS":    0,
		"FAHRENHEIT": 1,
		"KELVIN":     2,
	}
)

func (x Unit) Enum() *Unit {
	p := new(Unit)
	*p = x
	return p
}

func (x Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_temperature_proto_enumTypes[0].Descriptor()
}

func (Unit) Type() protoreflect.EnumType {
	return &file_temperature_proto_enumTypes[0]
}

func (x Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit.Descriptor instead.
func (Unit) EnumDescriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{0}
}

type ConversionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Temperature   float64                `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	FromUnit      Unit                   `protobuf:"varint,2,opt,name=from_unit,json=fromUnit,proto3,enum=temperature.Unit" json:"from_unit,omitempty"`
	ToUnit        Unit                   `protobuf:"varint,3,opt,name=to_unit,json=toUnit,proto3,enum=temperature.Unit" json:"to_unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversionRequest) Reset() {
	*x = ConversionRequest{}
	mi := &file_temperature_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionRequest) ProtoMessage() {}

func (x *ConversionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionRequest.ProtoReflect.Descriptor instead.
func (*ConversionRequest) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{0}
}

func (x *ConversionRequest) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ConversionRequest) GetFromUnit() Unit {
	if x != nil {
		return x.FromUnit
	}
	return Unit_CELSIUS
}

func (x *ConversionRequest) GetToUnit() Unit {
	if x != nil {
		return x.ToUnit
	}
	return Unit_CELSIUS
}

type ConversionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Temperature   float64                `protobuf:"fixed64,1,opt,name=temperature,proto3" json:"temperature,omitempty"`
	Unit          Unit                   `protobuf:"varint,2,opt,name=unit,proto3,enum=temperature.Unit" json:"unit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversionResponse) Reset() {
	*x = ConversionResponse{}
	mi := &file_temperature_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversionResponse) ProtoMessage() {}

func (x *ConversionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_temperature_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversionResponse.ProtoReflect.Descriptor instead.
func (*ConversionResponse) Descriptor() ([]byte, []int) {
	return file_temperature_proto_rawDescGZIP(), []int{1}
}

func (x *ConversionResponse) GetTemperature() float64 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

func (x *ConversionResponse) GetUnit() Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_CELSIUS
}

var File_temperature_proto protoreflect.FileDescriptor

var file_temperature_proto_rawDesc = string([]byte{
	0x0a, 0x11, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x22, 0x91, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x08,
	0x66, 0x72, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x07, 0x74, 0x6f, 0x5f, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x06, 0x74, 0x6f,
	0x55, 0x6e, 0x69, 0x74, 0x22, 0x5d, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x65,
	0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x52, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x2a, 0x2f, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x45, 0x4c, 0x53, 0x49, 0x55, 0x53, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x46, 0x41, 0x48, 0x52,
	0x45, 0x4e, 0x48, 0x45, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x45, 0x4c, 0x56,
	0x49, 0x4e, 0x10, 0x02, 0x32, 0x64, 0x0a, 0x14, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x07,
	0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x46, 0x5a, 0x44, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x72, 0x63, 0x6f, 0x73, 0x6e,
	0x61, 0x73, 0x70, 0x2f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x2d,
	0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x3b, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_temperature_proto_rawDescOnce sync.Once
	file_temperature_proto_rawDescData []byte
)

func file_temperature_proto_rawDescGZIP() []byte {
	file_temperature_proto_rawDescOnce.Do(func() {
		file_temperature_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_temperature_proto_rawDesc), len(file_temperature_proto_rawDesc)))
	})
	return file_temperature_proto_rawDescData
}

var file_temperature_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_temperature_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_temperature_proto_goTypes = []any{
	(Unit)(0),                  // 0: temperature.Unit
	(*ConversionRequest)(nil),  // 1: temperature.ConversionRequest
	(*ConversionResponse)(nil), // 2: temperature.ConversionResponse
}
var file_temperature_proto_depIdxs = []int32{
	0, // 0: temperature.ConversionRequest.from_unit:type_name -> temperature.Unit
	0, // 1: temperature.ConversionRequest.to_unit:type_name -> temperature.Unit
	0, // 2: temperature.ConversionResponse.unit:type_name -> temperature.Unit
	1, // 3: temperature.TemperatureConverter.Convert:input_type -> temperature.ConversionRequest
	2, // 4: temperature.TemperatureConverter.Convert:output_type -> temperature.ConversionResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_temperature_proto_init() }
func file_temperature_proto_init() {
	if File_temperature_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_temperature_proto_rawDesc), len(file_temperature_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_temperature_proto_goTypes,
		DependencyIndexes: file_temperature_proto_depIdxs,
		EnumInfos:         file_temperature_proto_enumTypes,
		MessageInfos:      file_temperature_proto_msgTypes,
	}.Build()
	File_temperature_proto = out.File
	file_temperature_proto_goTypes = nil
	file_temperature_proto_depIdxs = nil
}
